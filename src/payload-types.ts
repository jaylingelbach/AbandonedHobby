/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    categories: Category;
    conversations: Conversation;
    media: Media;
    messages: Message;
    orders: Order;
    products: Product;
    reviews: Review;
    tags: Tag;
    tenants: Tenant;
    users: User;
    notifications: Notification;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {
    categories: {
      subcategories: 'categories';
    };
  };
  collectionsSelect: {
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    conversations: ConversationsSelect<false> | ConversationsSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    messages: MessagesSelect<false> | MessagesSelect<true>;
    orders: OrdersSelect<false> | OrdersSelect<true>;
    products: ProductsSelect<false> | ProductsSelect<true>;
    reviews: ReviewsSelect<false> | ReviewsSelect<true>;
    tags: TagsSelect<false> | TagsSelect<true>;
    tenants: TenantsSelect<false> | TenantsSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    notifications: NotificationsSelect<false> | NotificationsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: string;
  name: string;
  slug?: string | null;
  color?: string | null;
  parent?: (string | null) | Category;
  subcategories?: {
    docs?: (string | Category)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "conversations".
 */
export interface Conversation {
  id: string;
  product: string | Product;
  buyer: string | User;
  seller: string | User;
  roomId: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products".
 */
export interface Product {
  id: string;
  tenant?: (string | null) | Tenant;
  name: string;
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * In USD
   */
  price: number;
  /**
   * Pick a top-level category first.
   */
  category: string | Category;
  /**
   * Choose a subcategory (enabled after picking a category).
   */
  subcategory?: (string | null) | Category;
  tags?: (string | Tag)[] | null;
  cover?: (string | null) | Media;
  refundPolicy?: ('30 day' | '14 day' | '7 day' | '1 day' | 'no refunds') | null;
  /**
   * Protected content visible to customers after purchase. Add any downloadable assets here.
   */
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * Check this box if you want to hide this item from the entire site. Customers who have purchased this item retain access to their purchase history.
   */
  isArchived?: boolean | null;
  /**
   * Check this box if you want to hide this item from the marketplace and only show in your personal storefront.
   */
  isPrivate?: boolean | null;
  trackInventory?: boolean | null;
  stockQuantity?: number | null;
  /**
   * Reorder to change the primary image
   */
  images?:
    | {
        image?: (string | null) | Media;
        alt?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tenants".
 */
export interface Tenant {
  id: string;
  /**
   * This is the name of the store (e.g. Jay's store), if you would like to update this please contact us.
   */
  name: string;
  /**
   * This is the subdomain of the store (e.g. [username].abandonedhobby.com), if you would like to update this please contact us.
   */
  slug: string;
  image?: (string | null) | Media;
  /**
   * Stripe Account ID associated with your shop
   */
  stripeAccountId: string;
  /**
   * You can not sell products until you have submitted your Stripe details.
   */
  stripeDetailsSubmitted?: boolean | null;
  /**
   * Primary owner/admin for this shop
   */
  primaryContact: string | User;
  /**
   * Where operational emails (sales, alerts) are sent
   */
  notificationEmail: string;
  /**
   * Greeting/display name for notifications
   */
  notificationName?: string | null;
  /**
   * Auto-managed count of products.
   */
  productCount?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt?: string | null;
  tenant: string | Tenant;
  uploadedBy?: (string | null) | User;
  prefix?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    medium?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  firstName: string;
  lastName: string;
  username: string;
  welcomeEmailSent: boolean;
  roles?: ('super-admin' | 'user')[] | null;
  tenants?:
    | {
        tenant: string | Tenant;
        id?: string | null;
      }[]
    | null;
  /**
   * UI preferences (e.g., dismissed banners)
   */
  uiState?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  _verified?: boolean | null;
  _verificationToken?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tags".
 */
export interface Tag {
  id: string;
  name: string;
  products?: (string | Product)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "messages".
 */
export interface Message {
  id: string;
  conversationId: string;
  sender: string | User;
  receiver: string | User;
  content: string;
  product?: (string | null) | Product;
  read?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders".
 */
export interface Order {
  id: string;
  orderNumber: string;
  buyer: string | User;
  buyerEmail?: string | null;
  sellerTenant: string | Tenant;
  currency: string;
  /**
   * The total amount paid in cents (Stripe amount_total).
   */
  total: number;
  /**
   * The Stripe account associated with the order.
   */
  stripeAccountId: string;
  /**
   * The Stripe checkout session associated with the order.
   */
  stripeCheckoutSessionId?: string | null;
  stripeEventId?: string | null;
  stripePaymentIntentId?: string | null;
  stripeChargeId?: string | null;
  status?: ('paid' | 'refunded' | 'partially_refunded' | 'canceled') | null;
  fulfillmentStatus?: ('unfulfilled' | 'shipped' | 'delivered' | 'returned') | null;
  shippingAddress?: {
    name?: string | null;
    line1?: string | null;
    line2?: string | null;
    city?: string | null;
    state?: string | null;
    postalCode?: string | null;
    country?: string | null;
  };
  items: {
    product: string | Product;
    nameSnapshot: string;
    unitAmount: number;
    quantity: number;
    amountSubtotal?: number | null;
    amountTax?: number | null;
    amountTotal?: number | null;
    refundPolicy?: ('30 day' | '14 day' | '7 day' | '1 day' | 'no refunds') | null;
    returnsAcceptedThrough?: string | null;
    id?: string | null;
  }[];
  returnsAcceptedThrough?: string | null;
  /**
   * Set when stock was decremented
   */
  inventoryAdjustedAt?: string | null;
  shipment?: {
    carrier?: ('usps' | 'ups' | 'fedex' | 'other') | null;
    trackingNumber?: string | null;
    trackingUrl?: string | null;
    shippedAt?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "reviews".
 */
export interface Review {
  id: string;
  description: string;
  rating: number;
  product: string | Product;
  user: string | User;
  updatedAt: string;
  createdAt: string;
}
/**
 * In-app notifications for users
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "notifications".
 */
export interface Notification {
  id: string;
  user: string | User;
  type: 'message';
  payload: {
    conversationId: string;
    sender: string | User;
    /**
     * Brief preview of the message content
     */
    excerpt?: string | null;
    /**
     * Reference to the original message that triggered this notification
     */
    messageId?: string | null;
  };
  read?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'categories';
        value: string | Category;
      } | null)
    | ({
        relationTo: 'conversations';
        value: string | Conversation;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'messages';
        value: string | Message;
      } | null)
    | ({
        relationTo: 'orders';
        value: string | Order;
      } | null)
    | ({
        relationTo: 'products';
        value: string | Product;
      } | null)
    | ({
        relationTo: 'reviews';
        value: string | Review;
      } | null)
    | ({
        relationTo: 'tags';
        value: string | Tag;
      } | null)
    | ({
        relationTo: 'tenants';
        value: string | Tenant;
      } | null)
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'notifications';
        value: string | Notification;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  color?: T;
  parent?: T;
  subcategories?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "conversations_select".
 */
export interface ConversationsSelect<T extends boolean = true> {
  product?: T;
  buyer?: T;
  seller?: T;
  roomId?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  tenant?: T;
  uploadedBy?: T;
  prefix?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        medium?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "messages_select".
 */
export interface MessagesSelect<T extends boolean = true> {
  conversationId?: T;
  sender?: T;
  receiver?: T;
  content?: T;
  product?: T;
  read?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders_select".
 */
export interface OrdersSelect<T extends boolean = true> {
  orderNumber?: T;
  buyer?: T;
  buyerEmail?: T;
  sellerTenant?: T;
  currency?: T;
  total?: T;
  stripeAccountId?: T;
  stripeCheckoutSessionId?: T;
  stripeEventId?: T;
  stripePaymentIntentId?: T;
  stripeChargeId?: T;
  status?: T;
  fulfillmentStatus?: T;
  shippingAddress?:
    | T
    | {
        name?: T;
        line1?: T;
        line2?: T;
        city?: T;
        state?: T;
        postalCode?: T;
        country?: T;
      };
  items?:
    | T
    | {
        product?: T;
        nameSnapshot?: T;
        unitAmount?: T;
        quantity?: T;
        amountSubtotal?: T;
        amountTax?: T;
        amountTotal?: T;
        refundPolicy?: T;
        returnsAcceptedThrough?: T;
        id?: T;
      };
  returnsAcceptedThrough?: T;
  inventoryAdjustedAt?: T;
  shipment?:
    | T
    | {
        carrier?: T;
        trackingNumber?: T;
        trackingUrl?: T;
        shippedAt?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products_select".
 */
export interface ProductsSelect<T extends boolean = true> {
  tenant?: T;
  name?: T;
  description?: T;
  price?: T;
  category?: T;
  subcategory?: T;
  tags?: T;
  cover?: T;
  refundPolicy?: T;
  content?: T;
  isArchived?: T;
  isPrivate?: T;
  trackInventory?: T;
  stockQuantity?: T;
  images?:
    | T
    | {
        image?: T;
        alt?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "reviews_select".
 */
export interface ReviewsSelect<T extends boolean = true> {
  description?: T;
  rating?: T;
  product?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tags_select".
 */
export interface TagsSelect<T extends boolean = true> {
  name?: T;
  products?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tenants_select".
 */
export interface TenantsSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  image?: T;
  stripeAccountId?: T;
  stripeDetailsSubmitted?: T;
  primaryContact?: T;
  notificationEmail?: T;
  notificationName?: T;
  productCount?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  firstName?: T;
  lastName?: T;
  username?: T;
  welcomeEmailSent?: T;
  roles?: T;
  tenants?:
    | T
    | {
        tenant?: T;
        id?: T;
      };
  uiState?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  _verified?: T;
  _verificationToken?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "notifications_select".
 */
export interface NotificationsSelect<T extends boolean = true> {
  user?: T;
  type?: T;
  payload?:
    | T
    | {
        conversationId?: T;
        sender?: T;
        excerpt?: T;
        messageId?: T;
      };
  read?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}